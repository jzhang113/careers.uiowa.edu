<?php
/**
 * @file
 * Code for the Basic Page Content Type feature.
 */

include_once 'basic_page_content_type.features.inc';

// Create a variable to store the path to this module
define('PAGE_PATH', drupal_get_path('module', 'basic_page_content_type'));

function basic_page_content_type_theme_registry_alter(&$theme_registry) {
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'careers', PAGE_PATH);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  // A list of templates the module will provide templates for
  $hooks = array('page__node__page');
  foreach ($hooks as $h) {
    // Add the key 'theme paths' if it doesn't exist in this theme's registry
    if (!isset($theme_registry[$h]['theme paths'])) {
      $theme_registry[$h]['theme paths'] = array();
    }
    //Shift this module's directory to the top of the theme path list
    if(is_array($theme_registry[$h]['theme paths'])) {
      $first_element = array_shift($theme_registry[$h]['theme paths']);
      if ($first_element) {
        array_unshift($theme_registry[$h]['theme paths'], $first_element, PAGE_PATH);
      } else {
        array_unshift($theme_registry[$h]['theme paths'], PAGE_PATH);
      }
    }
  }
}

/**
 * Alter Pathauto-generated aliases before saving.
 *
 * @param string $alias
 *   The automatic alias after token replacement and strings cleaned.
 * @param array $context
 *   An associative array of additional options, with the following elements:
 *   - 'module': The module or entity type being aliased.
 *   - 'op': A string with the operation being performed on the object being
 *     aliased. Can be either 'insert', 'update', 'return', or 'bulkupdate'.
 *   - 'source': A string of the source path for the alias (e.g. 'node/1').
 *     This can be altered by reference.
 *   - 'data': An array of keyed objects to pass to token_replace().
 *   - 'type': The sub-type or bundle of the object being aliased.
 *   - 'language': A string of the language code for the alias (e.g. 'en').
 *     This can be altered by reference.
 *   - 'pattern': A string of the pattern used for aliasing the object.
 */
function basic_page_content_type_pathauto_alias_alter(&$alias, array &$context) {
	if ($context['type'] == 'page') {

		// if node has a parent menu item
		if (isset($context['data']['node']->menu['p1'])) {
			// get first parent menu link id
		  $menuitem = menu_link_load($context['data']['node']->menu['p1']);

		  // get internal drupal path of first parent
		  $path = $menuitem['link_path'];
		  
		  // get path alias of first parent
		  $parentalias = drupal_get_path_alias($path);

		  // update node path url with first parent alias and a cleaned up node title
		  $alias = $parentalias . '/' . pathauto_cleanstring($context['data']['node']->title);
		}
	}
}