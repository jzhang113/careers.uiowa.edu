<?php
/**
 * @file
 * Code for the People feature.
 */

include_once 'people.features.inc';

/**
 * Implements hook_form_FORM_ID_alter
 * adding visible status on fields specific to peer advisors and professional
 * staff on people content type
*/


function people_form_people_node_form_alter(&$form, &$form_state, $form_id) {
  // Show fields based on which person type is selected.
  $form['field_people_groups']['#states'] = array(
      // Show the staff groups field when the professional staff is checked.
      'visible' => array(
       ':input[name="field_people_type[' . LANGUAGE_NONE . ']"]' => array('value' => 39),
    ),
      // add required to display the red asterisk.
      'required' => array(
       ':input[name="field_people_type[' . LANGUAGE_NONE . ']"]' => array('value' => 39),
    ),
  );
  $form['field_people_responsibilities']['#states'] = array(
      // Show the responsibilities field when the professional staff is checked.
      'visible' => array(
       ':input[name="field_people_type[' . LANGUAGE_NONE . ']"]' => array('value' => 39),
    ),
  );
  $form['field_people_member_since']['#states'] = array(
      // Show the field for how long person has been a staff member
      // when the professional staff person type is checked.
      'visible' => array(
       ':input[name="field_people_type[' . LANGUAGE_NONE . ']"]' => array('value' => 39),
    ),
  );
  $form['field_people_major']['#states'] = array(
      // Show the major field when the peer advisor person type is checked.
      'visible' => array(
       ':input[name="field_people_type[' . LANGUAGE_NONE . ']"]' => array('value' => 40),
    ),
  );
  $form['field_people_hometown']['#states'] = array(
      // Show the hometown field when the peer advisor person type is checked.
      'visible' => array(
       ':input[name="field_people_type[' . LANGUAGE_NONE . ']"]' => array('value' => 40),
    ),
  );
  $form['field_people_student_status']['#states'] = array(
      // Show the year in school field when the peer advisor person type is checked.
      'visible' => array(
       ':input[name="field_people_type[' . LANGUAGE_NONE . ']"]' => array('value' => 40),
    ),
  );

  // add css to remove required style added by #states required for checkbox.
   $form['field_people_groups']['#attached']['css'] = array(
     drupal_get_path('module', 'people') . '/css/people.css',
   );

  // Adding an additional validate function to article nodes to implement required conditional fields.
  $form['#validate'][] = 'people_people_form_validate';
}

/**
 * Custom validate function added to people node form
*/
function people_people_form_validate($form, &$form_state) {
  // if professional staff is checked and group field null then set error.
  if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 39)
    && $form_state['values']['field_people_groups'][LANGUAGE_NONE][0]['tid'] == NULL) {
    form_set_error('field_people_groups', $form['field_people_groups'][LANGUAGE_NONE]['#title'] . ' field is required when ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' field is set to Professional Staff');
  }

  // if professional staff is selected and non visible fields are filled out
  // then display error message.
  if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 39)
    && $form_state['values']['field_people_major'][LANGUAGE_NONE][0]['value'] != '') {
    form_set_error('field_people_type', $form['field_people_major'][LANGUAGE_NONE]['#title'] . ' cannot be set if ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' is set to Professional Staff');
  }
  if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 39)
    && $form_state['values']['field_people_hometown'][LANGUAGE_NONE][0]['value'] != '') {
    form_set_error('field_people_type', $form['field_people_hometown'][LANGUAGE_NONE]['#title'] . ' cannot be set if ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' is set to Professional Staff');
  }
  // if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 39)
  //   && $form_state['values']['field_people_student_status'][LANGUAGE_NONE] != '_none') {
  //   form_set_error('field_people_type', $form['field_people_student_status'][LANGUAGE_NONE]['#title'] . ' cannot be set if ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' is set to Professional Staff');
  // }

  // if peer advisor is selected and non visible fields are filled out
  // then display error message.
  if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 40)
    && $form_state['values']['field_people_groups'][LANGUAGE_NONE][0]['tid'] != NULL) {
    form_set_error('field_people_type', $form['field_people_groups'][LANGUAGE_NONE]['#title'] . ' cannot be set if ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' is set to Peer Advisor');
  }
  if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 40)
    && $form_state['values']['field_people_responsibilities'][LANGUAGE_NONE][0]['value'] != '') {
    form_set_error('field_people_type', $form['field_people_responsibilities'][LANGUAGE_NONE]['#title'] . ' cannot be set if ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' is set to Peer Advisor');
  }
  if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 40)
    && $form_state['values']['field_people_member_since'][LANGUAGE_NONE][0]['value'] != '') {
    form_set_error('field_people_type', $form['field_people_member_since'][LANGUAGE_NONE]['#title'] . ' cannot be set if ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' is set to Peer Advisor');
  }
  if (($form_state['values']['field_people_type'][LANGUAGE_NONE][0]['tid'] == 40)
    && $form_state['values']['field_people_member_since'][LANGUAGE_NONE][0]['value2'] != '') {
    form_set_error('field_people_type', $form['field_people_member_since'][LANGUAGE_NONE]['#title'] . ' cannot be set if ' . $form['field_people_type'][LANGUAGE_NONE]['#title'] . ' is set to Peer Advisor');
  }
}
